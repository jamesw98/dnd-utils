@inject ApiUtil Api
@inject ISnackbar Snackbar

@page "/custom-items"
@using Compendium.Blazor.Shared

<MudContainer MaxWidth="MaxWidth.Small">
    <AuthorizeView @ref="_auth">
        <NotAuthorized>
            <ForbiddenMessage/>
        </NotAuthorized>
        <Authorized Context="AuthContext">
            @if (_items?.Count != 0)
            {
                <MudText Typo="Typo.h2">Your Custom Items</MudText>
                <br/>
                <MudTable  T="CustomItem" Items="_items">
                    <HeaderContent>
                        <MudTh>Name</MudTh>
                        <MudTh>View</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.Name</MudTd>
                        <MudTd>
                            <MudButton Color="Color.Success" Variant="Variant.Outlined"
                                       Href="@($"/item/{context.ItemId}")">
                                View
                            </MudButton>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            }
            else if (_items?.Count == 0)
            {
                <MudText Typo="Typo.h3">No items found.</MudText>
            }
        </Authorized>
    </AuthorizeView>
</MudContainer>

@code {

    private AuthorizeView _auth;
    private List<CustomItem>? _items;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                _items = await Api.GetItemsForUser();
            }
            catch (Exception e)
            {
                Snackbar.Add("You must be logged in to view this page.", Severity.Warning);
            }
            StateHasChanged();
        }
    }

}